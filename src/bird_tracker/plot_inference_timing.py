import matplotlib.pyplot as plt

execution_times_ms = [295.003007, 281.53983, 338.305615, 325.040549, 276.625318, 275.907317, 276.118964, 276.593908, 277.049705, 279.82499, 277.82354, 295.58265, 277.58015, 278.061133, 277.494759, 276.666868, 277.371296, 277.491129, 274.572659, 276.148292, 274.78777, 274.143323, 275.323992, 275.466955, 274.718158, 275.258583, 275.261694, 275.607361, 274.560803, 276.589603, 274.760173, 275.297285, 274.633875, 276.336304, 275.136598, 275.856007]


gps_readings_long_lat = [(-122.300921667, 47.673045), (-122.300921667, 47.673045), (-122.30092, 47.673045), (-122.30092, 47.673045), (-122.300918333, 47.673045), (-122.300916667, 47.673045), (-122.300916667, 47.673045), (-122.300915, 47.673045), (-122.300915, 47.673043333), (-122.300916667, 47.673045), (-122.300916667, 47.673045), (-122.300918333, 47.673046667), (-122.300918333, 47.673046667), (-122.300918333, 47.673046667), (-122.300916667, 47.673045), (-122.300918333, 47.673046667), (-122.300918333, 47.673045), (-122.300918333, 47.673045), (-122.300918333, 47.673045), (-122.300918333, 47.673045), (-122.300918333, 47.673045), (-122.300918333, 47.673046667), (-122.300916667, 47.673046667), (-122.300916667, 47.673045), (-122.300916667, 47.673046667), (-122.300915, 47.673045), (-122.300915, 47.673046667), (-122.300915, 47.673045), (-122.300913333, 47.673045), (-122.300913333, 47.673045), (-122.300913333, 47.673045), (-122.300913333, 47.673045), (-122.300913333, 47.673045), (-122.300913333, 47.673045), (-122.300913333, 47.673045), (-122.300915, 47.673046667), (-122.300915, 47.673046667), (-122.300915, 47.673046667), (-122.300916667, 47.673046667), (-122.300915, 47.673046667), (-122.300915, 47.673046667), (-122.300915, 47.673045), (-122.300915, 47.673045), (-122.300913333, 47.673045), (-122.300913333, 47.673045), (-122.300913333, 47.673046667), (-122.300913333, 47.673046667), (-122.300913333, 47.673046667), (-122.300915, 47.673046667), (-122.300913333, 47.673046667), (-122.300913333, 47.673048333), (-122.300913333, 47.673048333), (-122.300913333, 47.67305), (-122.300913333, 47.673051667), (-122.300911667, 47.673053333), (-122.30091, 47.673053333), (-122.30091, 47.673053333), (-122.30091, 47.673055), (-122.300911667, 47.673055), (-122.300911667, 47.673055), (-122.300911667, 47.673056667), (-122.300911667, 47.673056667), (-122.30091, 47.673056667), (-122.30091, 47.673056667), (-122.30091, 47.673056667), (-122.30091, 47.673055), (-122.300911667, 47.673055), (-122.300911667, 47.673056667), (-122.300911667, 47.673056667), (-122.300911667, 47.673058333), (-122.300911667, 47.673056667), (-122.300911667, 47.673056667), (-122.300911667, 47.673058333), (-122.300911667, 47.673056667), (-122.300911667, 47.673056667), (-122.300911667, 47.673056667), (-122.300911667, 47.673058333), (-122.300911667, 47.67306), (-122.300911667, 47.67306), (-122.300911667, 47.67306), (-122.300911667, 47.673061667), (-122.300911667, 47.673061667), (-122.300913333, 47.673061667), (-122.300913333, 47.673061667), (-122.300911667, 47.673061667), (-122.300911667, 47.673061667), (-122.300911667, 47.673061667), (-122.30091, 47.673061667), (-122.30091, 47.673061667), (-122.30091, 47.673061667), (-122.300911667, 47.673063333), (-122.30091, 47.673063333), (-122.30091, 47.673063333), (-122.300908333, 47.673061667), (-122.300908333, 47.673061667), (-122.300908333, 47.67306), (-122.300908333, 47.67306), (-122.300908333, 47.673061667), (-122.300908333, 47.673061667), (-122.300908333, 47.673061667)]

def plot_inference():
    # Create the plot
    plt.figure(figsize=(10, 6))
    plt.plot(range(len(execution_times_ms)), execution_times_ms, marker='o', linestyle='-', color='b')
    plt.title("TensorFlow-Lite Inference Times for 16K Parameter Model on 144kS Audio Input (Pi 4B)")
    plt.xlabel("Audio Frame")
    plt.ylabel("Execution Time (ms)")
    plt.grid(True)

    # Show the plot
    plt.show()


def plot_gps():
    fig, axs = plt.subplots(2, 1, figsize=(6, 6))
    longitudes = [i[0] for i in gps_readings_long_lat]
    latitudes = [i[1] for i in gps_readings_long_lat]

    print(longitudes)

    count, bins, _ = axs[0].hist(longitudes, bins=10)
    print("count: ", count, " bins: ", bins)
    axs[0].set_xlabel('Longitude')
    axs[0].set_ylabel('Count')
    axs[0].set_title('Distribution of Longitude Readings')

    count, bins, _ = axs[1].hist(latitudes, bins=10)
    axs[1].set_xlabel('Latitude')
    axs[1].set_ylabel('Count')
    axs[1].set_title('Distribution of Latitude Readings')

    # Adjust spacing between subplots
    plt.tight_layout()

    # Show the plot
    plt.show()


if __name__ == "__main__":
    plot_gps()
